Design database for Zen class programme
users
codekata
attendance
topics
tasks
company_drives
mentors

Database Structure:

1.users: This collection stores user details.

{
  "_id": ObjectId(),
  "name": String,
  "email": String,
  "batch": String,
  "joined_date": Date,
  "mentors": [ObjectId],
  "attendance": [
    {
      "date": Date,
      "status": String 
    }
  ],
  "tasks": [ObjectId], 
  "codekata": Number 
}


2.codekata: This collection stores details of problems solved by the users.

{
  "_id": ObjectId(),
  "user_id": ObjectId, 
  "problems_solved": Number
}

3.attendance: Stores attendance details for users.

{
  "_id": ObjectId(),
  "user_id": ObjectId, 
  "date": Date,
  "status": String
}


4.topics: Stores details of topics taught.

{
  "_id": ObjectId(),
  "name": String,
  "date": Date
}

5.tasks: Stores task details assigned to users.

{
  "_id": ObjectId(),
  "name": String,
  "description": String,
  "assigned_date": Date,
  "due_date": Date,
  "status": String, 
  "user_id": ObjectId 
}

6.company_drives: Stores details of company drives.


{
  "_id": ObjectId(),
  "company_name": String,
  "drive_date": Date,
  "appeared_students": [ObjectId]
}

7.mentors: Stores mentor details.


{
  "_id": ObjectId(),
  "name": String,
  "mentee_count": Number,
  "mentees": [ObjectId] 
}


Queries:

1.Find all the topics and tasks which are taught in the month of October:

db.topics.find({
  date: {
    $gte: ISODate("2020-10-01"),
    $lt: ISODate("2020-11-01")
  }
});

db.tasks.find({
  assigned_date: {
    $gte: ISODate("2020-10-01"),
    $lt: ISODate("2020-11-01")
  }
});


2.Find all the company drives which appeared between 15-Oct-2020 and 31-Oct-2020:

db.company_drives.find({
  drive_date: {
    $gte: ISODate("2020-10-15"),
    $lt: ISODate("2020-11-01")
  }
});

3.Find all the company drives and students who appeared for the placement:

db.company_drives.aggregate([
  {
    $lookup: {
      from: "users",
      localField: "appeared_students",
      foreignField: "_id",
      as: "students"
    }
  }
]);

4.Find the number of problems solved by the user in codekata:

db.codekata.find(
  { user_id: ObjectId("USER_ID") }, 
  { problems_solved: 1 }
);

5.Find all the mentors with mentee count more than 15:

db.mentors.find({ mentee_count: { $gt: 15 } });

6.Find the number of users who are absent and task is not submitted between 15-Oct-2020 and 31-Oct-2020:

db.users.aggregate([
  {
    $lookup: {
      from: "attendance",
      localField: "_id",
      foreignField: "user_id",
      as: "attendance"
    }
  },
  { $unwind: "$attendance" },
  {
    $match: {
      "attendance.date": {
        $gte: ISODate("2020-10-15"),
        $lt: ISODate("2020-11-01")
      },
      "attendance.status": "Absent"
    }
  },
  {
    $lookup: {
      from: "tasks",
      localField: "_id",
      foreignField: "user_id",
      as: "tasks"
    }
  },
  { $unwind: "$tasks" },
  {
    $match: {
      "tasks.status": { $ne: "Submitted" },
      "tasks.assigned_date": {
        $gte: ISODate("2020-10-15"),
        $lt: ISODate("2020-11-01")
      }
    }
  },
  {
    $group: {
      _id: null,
      count: { $sum: 1 }
    }
  }
]);